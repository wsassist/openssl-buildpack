#!/usr/bin/env bash
set -e

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

OPENSSL_VERSION="3.3.4"
OPENSSL_INSTALL_DIR="$BUILD_DIR/.openssl"
OPENSSL_CACHE_DIR="$CACHE_DIR/openssl-$OPENSSL_VERSION"
OPENSSL_URL="https://github.com/openssl/openssl/releases/download/openssl-$OPENSSL_VERSION/openssl-$OPENSSL_VERSION.tar.gz"

echo "-----> Installing OpenSSL $OPENSSL_VERSION"

# Check for required tools (gcc, make, zlib)
if ! command -v gcc >/dev/null 2>&1 || ! command -v make >/dev/null 2>&1 || ! pkg-config --libs zlib >/dev/null 2>&1; then
  echo "Error: Missing required build tools (gcc, make, or zlib). Ensure build-essential and zlib1g-dev are available."
  exit 1
fi

if [ -d "$OPENSSL_CACHE_DIR" ]; then
  echo "-----> Restoring OpenSSL from cache"
  cp -r "$OPENSSL_CACHE_DIR" "$OPENSSL_INSTALL_DIR"
else
  echo "-----> Building OpenSSL (cache miss)"

  # Download and extract quietly
  curl -sL "$OPENSSL_URL" | tar xzf - >/dev/null 2>&1
  cd "openssl-$OPENSSL_VERSION"

  # Configure with shared libraries
  ./config --prefix="$OPENSSL_INSTALL_DIR" --openssldir="$OPENSSL_INSTALL_DIR" shared zlib >/dev/null 2>&1

  # Build and install quietly
  make -s -j$(nproc) >/dev/null 2>&1
  make -s install_sw >/dev/null 2>&1

  cd ..
  rm -rf "openssl-$OPENSSL_VERSION"

  # Cache the installation
  mkdir -p "$OPENSSL_CACHE_DIR"
  cp -r "$OPENSSL_INSTALL_DIR"/* "$OPENSSL_CACHE_DIR"
fi

# Export for this build (for Ruby buildpack)
export PATH="$OPENSSL_INSTALL_DIR/bin:$PATH"
export LD_LIBRARY_PATH="$OPENSSL_INSTALL_DIR/lib64:$LD_LIBRARY_PATH"
export LIBRARY_PATH="$OPENSSL_INSTALL_DIR/lib64:$LIBRARY_PATH"
export CPATH="$OPENSSL_INSTALL_DIR/include:$CPATH"
export PKG_CONFIG_PATH="$OPENSSL_INSTALL_DIR/lib64/pkgconfig:$PKG_CONFIG_PATH"

# Debug: Verify OpenSSL binary
echo "-----> Verifying OpenSSL installation"
$OPENSSL_INSTALL_DIR/bin/openssl version

# Persist for runtime
mkdir -p "$BUILD_DIR/.profile.d"
cat <<EOF > "$BUILD_DIR/.profile.d/zz_openssl_fix.sh"
export PATH="$OPENSSL_INSTALL_DIR/bin:\$PATH"
export LD_LIBRARY_PATH="$OPENSSL_INSTALL_DIR/lib64:\$LD_LIBRARY_PATH"
export LIBRARY_PATH="$OPENSSL_INSTALL_DIR/lib64:\$LIBRARY_PATH"
export CPATH="$OPENSSL_INSTALL_DIR/include:\$CPATH"
export PKG_CONFIG_PATH="$OPENSSL_INSTALL_DIR/lib64/pkgconfig:\$PKG_CONFIG_PATH"
EOF

# Force Ruby buildpack to recompile Ruby with custom OpenSSL
export LDFLAGS="-L$OPENSSL_INSTALL_DIR/lib64"
export CFLAGS="-I$OPENSSL_INSTALL_DIR/include"
export CPPFLAGS="-I$OPENSSL_INSTALL_DIR/include"

echo "-----> OpenSSL ${OPENSSL_VERSION} installed"